# This file is generated by gyp; do not edit.

TOOLSET := target
TARGET := sha1collisiondetection
### Rules for action "build_sha1collisiondetection":
quiet_cmd_binding_gyp_sha1collisiondetection_target_build_sha1collisiondetection = ACTION binding_gyp_sha1collisiondetection_target_build_sha1collisiondetection $@
cmd_binding_gyp_sha1collisiondetection_target_build_sha1collisiondetection = LD_LIBRARY_PATH=$(builddir)/lib.host:$(builddir)/lib.target:$$LD_LIBRARY_PATH; export LD_LIBRARY_PATH; cd $(srcdir)/.; mkdir -p sha1collisiondetection/obj_lib; make -C sha1collisiondetection

sha1collisiondetection/obj_lib/sha1.o: obj := $(abs_obj)
sha1collisiondetection/obj_lib/sha1.o: builddir := $(abs_builddir)
sha1collisiondetection/obj_lib/sha1.o: TOOLSET := $(TOOLSET)
sha1collisiondetection/obj_lib/sha1.o:  FORCE_DO_CMD
	$(call do_cmd,binding_gyp_sha1collisiondetection_target_build_sha1collisiondetection)

all_deps += sha1collisiondetection/obj_lib/sha1.o
action_binding_gyp_sha1collisiondetection_target_build_sha1collisiondetection_outputs := sha1collisiondetection/obj_lib/sha1.o


### Rules for final target.
# Build our special outputs first.
$(obj).target/sha1collisiondetection.so: | $(action_binding_gyp_sha1collisiondetection_target_build_sha1collisiondetection_outputs)

# Preserve order dependency of special output on deps.
$(action_binding_gyp_sha1collisiondetection_target_build_sha1collisiondetection_outputs): | 

LDFLAGS_Debug := \
	-pthread \
	-rdynamic \
	-m64

LDFLAGS_Release := \
	-pthread \
	-rdynamic \
	-m64

LIBS :=

$(obj).target/sha1collisiondetection.so: GYP_LDFLAGS := $(LDFLAGS_$(BUILDTYPE))
$(obj).target/sha1collisiondetection.so: LIBS := $(LIBS)
$(obj).target/sha1collisiondetection.so: LD_INPUTS := 
$(obj).target/sha1collisiondetection.so: TOOLSET := $(TOOLSET)
$(obj).target/sha1collisiondetection.so:  FORCE_DO_CMD
	$(call do_cmd,solink)

all_deps += $(obj).target/sha1collisiondetection.so
# Add target alias
.PHONY: sha1collisiondetection
sha1collisiondetection: $(builddir)/sha1collisiondetection.so

# Copy this to the shared library output path.
$(builddir)/sha1collisiondetection.so: TOOLSET := $(TOOLSET)
$(builddir)/sha1collisiondetection.so: $(obj).target/sha1collisiondetection.so FORCE_DO_CMD
	$(call do_cmd,copy)

all_deps += $(builddir)/sha1collisiondetection.so
# Short alias for building this shared library.
.PHONY: sha1collisiondetection.so
sha1collisiondetection.so: $(obj).target/sha1collisiondetection.so $(builddir)/sha1collisiondetection.so

# Add shared library to "all" target.
.PHONY: all
all: $(builddir)/sha1collisiondetection.so

